<launch>

  <!-- Simulator -->
  <node pkg="so3_quadrotor_simulator"
        type="quadrotor_simulator_so3"
        name="quadrotor_simulator_so3"
        output="screen">
    <param name="rate/odom" value="100.0"/>
    <remap from="~odom" to="/visual_slam/odom"/>
    <remap from="~cmd" to="so3_cmd"/>
    <remap from="~force_disturbance" to="force_disturbance"/>    
    <remap from="~moment_disturbance" to="moment_disturbance"/>        
  </node>

  <node pkg="so3_disturbance_generator"
        name="so3_disturbance_generator"
        type="so3_disturbance_generator"       
        output="screen">
    <remap from="~odom" to="/visual_slam/odom"/>              <!-- Ground Truth & Fake VSLAM Odom -->
    <remap from="~noisy_odom" to="/state_ukf/odom"/>          <!-- Fake VINS Odom                 -->
    <remap from="~correction" to="/visual_slam/correction"/>  <!-- Fake VSLAM Correction          -->   
    <remap from="~force_disturbance" to="force_disturbance"/>        
    <remap from="~moment_disturbance" to="moment_disturbance"/>            
  </node>
  
  <!-- Trajectory Generator Config -->
  <node pkg="rqt_reconfigure"
        name="trajectory_generator_gui"
        type="rqt_reconfigure"       
        output="screen"/>
        
  <!-- Manual Waypoint Generator -->
  <node pkg="waypoint_generator"
        name="waypoint_generator"
        type="waypoint_generator"       
        output="screen">
    <remap from="~odom" to="/visual_slam/odom"/>        
    <remap from="~goal" to="/goal"/>
    <param name="waypoint_type" value="manual"/>    
  </node>     
  

  <!-- Controller -->  
  <node pkg="nodelet"
    type="nodelet"
    args="standalone so3_control/SO3ControlNodelet"
    name="so3_control"
    required="true"
    output="screen">
    <remap from="~odom" to="/state_ukf/odom"/>
    <remap from="~position_cmd" to="position_cmd"/>
    <remap from="~motors" to="motors"/>
    <remap from="~corrections" to="corrections"/>
    <remap from="~so3_cmd" to="so3_cmd"/>
    <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
    <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
    <param name="mass" value="0.74"/>
    <param name="use_angle_corrections " value="false"/>
    <param name="use_external_yaw "      value="false"/>
    <param name="gains/rot/z" value="1.0"/>    
    <param name="gains/ang/z" value="0.1"/>        
  </node>   

  <!-- Visualization -->
  <node pkg="odom_visualization"
        name="odom_visualization_ukf"
        type="odom_visualization"       
        output="screen">
    <remap from="~odom" to="/visual_slam/odom"/>
    <param name="color/a" value="0.8"/>    
    <param name="color/r" value="1.0"/>        
    <param name="color/g" value="0.0"/>        
    <param name="color/b" value="0.0"/>       
    <param name="covariance_scale" value="100.0"/>       
  </node>   


  <node name="rviz" 
        pkg="rviz" 
        type="rviz" 
        output="screen"
        args="-d $(find voxel_trajectory)/launch/rviz_config/rviz_config.rviz"/>  

  <node
    pkg     = "voxel_trajectory"
    type    = "voxel_trajectory_generator_node"
    output  = "screen"
    name    = "trajectory_generator">
    

    <remap 
        from    = "~obstacle_point_cloud" 
        to      = "~obstacle_point_cloud" />

    <remap
        from    = "~odometry"
        to      = "/state_ukf/odom" />

    <remap
        from    = "~waypoints"
        to      = "/waypoint_generator/waypoints" />

    <remap
        from    = "~dest"
        to      = "~dest" />

    <remap
        from    = "~desired_state"
        to      = "position_cmd" />

    <remap
        from    = "~trajectory"
        to      = "~traj"/>

    <remap
        from    = "~map_points"
        to      = "~map_points"/>
  </node>
<!--
  <node
    pkg     = "voxel_trajectory"
    type    = "mission_commander_node"
    output  = "screen"
    name    = "mission_commander">

    <param 
        name    = "point_cloud_file" 
        value   = "$(find voxel_trajectory)/data/3d-cloud.txt"/>
  </node>
-->

</launch>
