<launch>


    <group ns = "environment" clear_params = "true">
        <node 
            pkg     = "tracking_trajectory"
            type    = "obstacle_generator_node"
            name    = "obstacle_generator"
            output  = "log">

            <rosparam>
                delay : 5.0
                obstacle :
                    boundary :
                        lower_x : -20.0
                        upper_x : 20.0
                        lower_y : -20.0
                        upper_y : 20.0
                        lower_z : 0.0
                        upper_z : 40.0
                    forest :
                        number : 80
                        is_rotated : true
                        stem :
                            height :
                                mean : 7
                                variance : 1
                            radius :
                                mean : 0.3
                                variance : 0.5
                        top :
                            height :
                                mean : 0.02
                                variance : 0.4
                            radius :
                                mean : 0.02
                                variance : 0.4
                        resolution : 
                            position : 0.1
                            orientation : 0.1
                            map : 0.2
            </rosparam>
            <!-- subscribed topics -->
            <remap from = "~obstcle_type" to = "obstacle_type"/>

            <!-- published topics -->
            <remap from = "~obstacle_blocks" to = "obstacle_blocks"/>
        </node>
    </group>

    <group ns = "target" clear_params = "true">
        <include ns = "quadrotor" file = "$(find voxel_trajectory)/launch/simulated_quadrotor.launch">
            <arg name = "odometry_path" value = "/target/odometry"/>
            <arg name = "position_cmd_path" value = "/target/position_cmd"/>
            <arg name = "initial_position" value = "[0.0, 0.0, 0.0]"/>
        </include>

        <include ns = "trajectory" file = "$(find voxel_trajectory)/launch/waypoints_trajectory_generator.launch">
            <arg name = "waypoints_path" value = "/target/waypoints"/>
            <arg name = "odometry_path" value = "/target/odometry"/>
            <arg name = "position_cmd_path" value = "/target/position_cmd"/>
            <arg name = "obstacle_points_path" value = "/environment/obstacle_points"/>
            <arg name = "obstacle_blocks1_path" value = "/environment/obstacle_blocks1"/>
            <arg name = "obstacle_blocks2_path" value = "/environment/obstacle_blocks2"/>
            <arg name = "laser_scan_path" value = "/target/simulated_laser/scan"/>
        </include>
        
        
          <node
            pkg = "tracking_trajectory"
            type = "simulated_laser_naive_node"
            name = "simulated_laser"
            output = "screen">
            <rosparam>
                map :
                    boundary :
                        lower_x : -100.0
                        upper_x : 100.0
                        lower_y : -100.0
                        upper_y : 100.0
                        lower_z : 0.0
                        upper_z : 200.0
                limited_sensing :
                    rate : 20
                    angle :
                        min : 0.0
                        max : 6.28318530718
                        count : 1000
                    range :
                        min : 0.1
                        max : 10.0
                        increment : 0.1
            </rosparam>
            
            <!-- subscribed topics -->
            <remap from = "~odometry" to = "/target/odometry"/>
            <remap from = "~obstacle_points" to = "/environment/obstacle_points"/>
            <remap from = "~obstacle_blocks" to = "/environment/obstacle_blocks"/>
            
            <!-- advertised topics -->
            <remap from = "~scan" to = "~scan"/>
        </node>

        <!-- Manual Waypoint Generator -->
        <node pkg = "waypoint_generator"
            name = "waypoint_generator"
            type = "waypoint_generator"       
            output = "screen">  
            <param name="~waypoint_type" value="manual"/>  
            <remap from = "~odom" to = "/target/odometry"/>        
            <remap from = "~goal" to = "/goal"/>
            <remap from = "~waypoints" to = "waypoints"/>
        </node>   

        <!-- Visualization -->
        <node pkg="odom_visualization"
            name="odom_visualization_ukf"
            type="odom_visualization"       
            output="screen">
            
            <rosparam>
                color :
                    a : 0.8
                    r : 1.0
                    g : 0.0
                    b : 0.0
                covariance_scale : 100.0
            </rosparam>  
            <remap from= "~odom" to = "odometry"/>
        </node>
    </group>


    <node 
        name = "rviz" 
        pkg = "rviz" 
        type = "rviz" 
        output = "screen"
        respawn = "true"
        args="-d $(find voxel_trajectory)/config/visualization.rviz"/>     

</launch>
